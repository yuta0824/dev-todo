{"version":3,"file":"bundle.js","mappings":"uvBAGO,IAAIA,EAAW,GAChBC,EAAmBC,SAASC,cAAc,cAC1CC,EAAqBF,SAASC,cAAc,WAC9CE,EAAa,GA+BJC,EAAwB,SAACC,IAxBf,WACrB,KAAON,EAAiBO,YACtBP,EAAiBO,WAAWC,QAEhC,CAqBEC,GAEAV,EACGW,QACC,SAACC,GAAI,OAEHA,EAAKC,SAASC,SAAST,IAAeO,EAAKG,OAAOD,SAAST,EAAW,IAEzEW,SAAQ,SAACJ,GAAS,IAAAK,EAAAC,EAAAC,EAAAC,EAEXC,EAAkBnB,SAASoB,cAAc,MAC/CD,EAAgBE,YAAcX,EAAKC,UACnCI,EAAAI,EAAgBG,WAAUC,IAAGC,MAAAT,EAAAU,EAAIpB,IAGjC,IAAMqB,EAAgB1B,SAASoB,cAAc,MAC7CM,EAAcL,YAAcX,EAAKG,QACjCG,EAAAU,EAAcJ,WAAUC,IAAGC,MAAAR,EAAAS,EAAIpB,IAG/B,IAAMsB,EAAkB3B,SAASoB,cAAc,MAC/CO,EAAgBN,YAAcX,EAAKkB,UACnCX,EAAAU,EAAgBL,WAAUC,IAAGC,MAAAP,EAAAQ,EAAIpB,IAGjC,IAAMwB,EAAe7B,SAASoB,cAAc,UAC5CS,EAAaR,YAAc,KAC3BQ,EAAaP,UAAUC,IACrB,aACA,UACA,aACA,kBACA,OACA,QAEFM,EAAaC,iBAAiB,SAAS,WAhD1B,IAACC,IAiDDrB,EAAKqB,OAhDtBjC,EAAWA,EAASW,QAAO,SAACC,GAAI,OAAKqB,IAAWrB,EAAKqB,MAAM,IAC3D3B,EAAsB,CAAC,SAAU,kBAAmB,OAAQ,QAgDxD,IAGA,IAAM4B,EAAsBhC,SAASoB,cAAc,OACnDF,EAAAc,EAAoBV,WAAUC,IAAGC,MAAAN,EAAAO,EAAIpB,GAAO4B,OAAA,CAAE,iBAC9CD,EAAoBE,YAAYL,GAGhC,IAAMM,EAAYnC,SAASoB,cAAc,MACzCe,EAAUD,YAAYf,GACtBgB,EAAUD,YAAYR,GACtBS,EAAUD,YAAYP,GACtBQ,EAAUD,YAAYF,GACtBjC,EAAiBmC,YAAYC,EAC/B,GACJ,EAOAjC,EAAmB4B,iBAAiB,SAAS,WAC3C3B,EAAaD,EAAmBkC,MAChChC,EAAsB,CAAC,SAAU,kBAAmB,OAAQ,QAC9D,ICjGuBJ,SAASC,cAAc,oBAO/B6B,iBAAiB,SAAS,WCHV,IAEvBO,EACAC,EACAC,EAFAF,EAAcrC,SAASC,cAAc,kBACrCqC,EAAYtC,SAASC,cAAc,eACnCsC,EAAcvC,SAASC,cAAc,iBAG3CH,EAAS0C,KAAK,CACZT,OAAQU,KAAKC,MACb/B,SAAU0B,EAAYD,MACtBvB,OAAQyB,EAAUF,MAClBR,SAAUW,EAAYH,QDNxBhC,EAAsB,CAAC,SAAU,kBAAmB,OAAQ,QAC9D,G","sources":["webpack://template-webpack/./src/assets/script/todo.js","webpack://template-webpack/./src/assets/script/button.js","webpack://template-webpack/./src/assets/script/register.js"],"sourcesContent":["/**\n * 変数の定義\n */\nexport let todoList = [];\nconst tableBodyElement = document.querySelector(\"#todo-list\");\nconst filterInputElement = document.querySelector(\"#filter\");\nlet filterWord = \"\";\n\n/**\n * 既存のTODO一覧を削除する関数\n *\n * @returns {void}\n */\nconst deleteTodoList = () => {\n  while (tableBodyElement.firstChild) {\n    tableBodyElement.firstChild.remove();\n  }\n};\n\n/**\n * TODOを削除する関数\n *\n * @param {number} todoId - 削除するTODOのID\n * @returns {void}\n */\nconst deleteTodo = (todoId) => {\n  todoList = todoList.filter((todo) => todoId !== todo.todoId);\n  renderTodoListElement([\"border\", \"border-gray-300\", \"px-2\", \"py-2\"]);\n};\n\n/**\n * TODOの一覧を描写する関数。\n * フィルター機能で絞り込んだTODOの一覧を描写する。\n *\n * @param {string[]} classes - クラス属性の配列\n * @returns {void}\n */\nexport const renderTodoListElement = (classes) => {\n  deleteTodoList();\n\n  todoList\n    .filter(\n      (todo) =>\n        // 絞り込み機能で絞り込んだTODOの一覧を描写する\n        todo.todoName.includes(filterWord) || todo.person.includes(filterWord)\n    )\n    .forEach((todo) => {\n      // TODO名に関するtdタグを作成\n      const todoNameElement = document.createElement(\"td\");\n      todoNameElement.textContent = todo.todoName;\n      todoNameElement.classList.add(...classes);\n\n      // 担当者に関するtdタグを作成\n      const personElement = document.createElement(\"td\");\n      personElement.textContent = todo.person;\n      personElement.classList.add(...classes);\n\n      // 期限に関するtdタグを作成\n      const deadlineElement = document.createElement(\"td\");\n      deadlineElement.textContent = todo.deadline;\n      deadlineElement.classList.add(...classes);\n\n      // 削除ボタンを作成\n      const deleteButton = document.createElement(\"button\");\n      deleteButton.textContent = \"削除\";\n      deleteButton.classList.add(\n        \"text-white\",\n        \"rounded\",\n        \"bg-red-600\",\n        \"border-gray-300\",\n        \"px-2\",\n        \"py-1\"\n      );\n      deleteButton.addEventListener(\"click\", () => {\n        deleteTodo(todo.todoId);\n      });\n\n      // 削除ボタンに関するtdタグを作成\n      const deleteButtonElement = document.createElement(\"td\");\n      deleteButtonElement.classList.add(...classes, \"text-center\");\n      deleteButtonElement.appendChild(deleteButton);\n\n      // trタグを作成\n      const trElement = document.createElement(\"tr\");\n      trElement.appendChild(todoNameElement);\n      trElement.appendChild(personElement);\n      trElement.appendChild(deadlineElement);\n      trElement.appendChild(deleteButtonElement);\n      tableBodyElement.appendChild(trElement);\n    });\n};\n\n/**\n * 絞り込み機能に入力された文字列が変更されたときの処理\n *\n * @returns {void}\n */\nfilterInputElement.addEventListener(\"input\", () => {\n  filterWord = filterInputElement.value;\n  renderTodoListElement([\"border\", \"border-gray-300\", \"px-2\", \"py-2\"]);\n});\n","import { registerNewTodo } from \"./register\";\nimport { renderTodoListElement } from \"./todo\";\n\nconst buttonRegister = document.querySelector(\"#button-register\");\n\n/**\n * 登録ボタンがクリックされたときの処理\n *\n * @returns {void}\n */\nbuttonRegister.addEventListener(\"click\", () => {\n  registerNewTodo();\n  renderTodoListElement([\"border\", \"border-gray-300\", \"px-2\", \"py-2\"]);\n});\n","import { todoList } from \"./todo\";\n\n/**\n * 入力されたTODOを取得する関数\n *\n * @returns {void}\n */\nexport const registerNewTodo = () => {\n  // 入力されたTODOの情報を取得\n  const newTodoName = document.querySelector(\"#new-todo-name\");\n  const newPerson = document.querySelector(\"#new-person\");\n  const newDeadline = document.querySelector(\"#new-deadline\");\n\n  // 取得したTODOの情報をTODOリストに追加\n  todoList.push({\n    todoId: Date.now(),\n    todoName: newTodoName.value,\n    person: newPerson.value,\n    deadline: newDeadline.value,\n  });\n};\n"],"names":["todoList","tableBodyElement","document","querySelector","filterInputElement","filterWord","renderTodoListElement","classes","firstChild","remove","deleteTodoList","filter","todo","todoName","includes","person","forEach","_todoNameElement$clas","_personElement$classL","_deadlineElement$clas","_deleteButtonElement$","todoNameElement","createElement","textContent","classList","add","apply","_toConsumableArray","personElement","deadlineElement","deadline","deleteButton","addEventListener","todoId","deleteButtonElement","concat","appendChild","trElement","value","newTodoName","newPerson","newDeadline","push","Date","now"],"sourceRoot":""}